{
  "openapi": "3.0.0",
  "paths": {
    "/api/account/get-account/{network}/{address}": {
      "get": {
        "operationId": "getAccount",
        "summary": "",
        "parameters": [
          {
            "name": "address",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/NetworkType"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "operationId": "me",
        "summary": "",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": ["auth"]
      }
    },
    "/api/auth/logout": {
      "get": {
        "operationId": "logout",
        "summary": "",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "tags": ["auth"]
      }
    },
    "/api/auth/request-challenge/{publicKey}": {
      "get": {
        "operationId": "requestChallenge",
        "summary": "",
        "parameters": [
          {
            "name": "publicKey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestChallenge"
                }
              }
            }
          }
        },
        "tags": ["auth"]
      }
    },
    "/api/auth/respond-challenge": {
      "post": {
        "operationId": "respondChallenge",
        "summary": "",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResponseChallengeOptions"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": ["auth"]
      }
    },
    "/api/config": {
      "get": {
        "operationId": "getConfig",
        "summary": "",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config"
                }
              }
            }
          }
        },
        "tags": ["config"]
      }
    },
    "/api/page/get-page-by-id/{pageId}": {
      "get": {
        "operationId": "getPageById",
        "summary": "",
        "parameters": [
          {
            "name": "pageId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          }
        },
        "tags": ["page"]
      }
    },
    "/api/page/get-page-by-url": {
      "get": {
        "operationId": "getPageByUrl",
        "summary": "",
        "parameters": [
          {
            "name": "url",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          }
        },
        "tags": ["page"]
      }
    },
    "/api/solana/bonfida/lookup/{publicKey}": {
      "get": {
        "operationId": "ApiSolanaFeatureController_bonfidaLookup",
        "parameters": [
          {
            "name": "publicKey",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/user/get-user-by-id/{userId}": {
      "get": {
        "operationId": "getUserById",
        "summary": "",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": ["user"]
      }
    },
    "/api/user/get-user-by-identity/{provider}/{providerId}": {
      "get": {
        "operationId": "getUserByIdentity",
        "summary": "",
        "parameters": [
          {
            "name": "providerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "required": true,
            "in": "path",
            "schema": {
              "$ref": "#/components/schemas/IdentityProvider"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": ["user"]
      }
    },
    "/api/user/get-user-by-username/{username}": {
      "get": {
        "operationId": "getUserByUsername",
        "summary": "",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": ["user"]
      }
    },
    "/api/user/meta/{username}": {
      "get": {
        "operationId": "meta",
        "summary": "",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": ["user"]
      }
    }
  },
  "info": {
    "title": "PubKey API",
    "description": "The Social Solana Explorer",
    "version": "dev",
    "contact": {}
  },
  "tags": [
    {
      "name": "PubKey",
      "description": ""
    }
  ],
  "servers": [
    {
      "url": "https://pubkey.ngrok.io"
    }
  ],
  "components": {
    "securitySchemes": {
      "cookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "__session"
      }
    },
    "schemas": {
      "NetworkType": {
        "type": "string",
        "enum": ["SolanaDevnet", "SolanaMainnet", "SolanaTestnet"]
      },
      "UserRole": {
        "type": "string",
        "enum": ["Admin", "User"]
      },
      "UserStatus": {
        "type": "string",
        "enum": ["Active", "Created", "Inactive"]
      },
      "Identity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "provider": {
            "type": "object"
          },
          "providerId": {
            "type": "string"
          },
          "profile": {
            "type": "object",
            "nullable": true
          },
          "verified": {
            "type": "boolean"
          }
        },
        "required": ["id", "provider", "providerId", "verified"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "pid": {
            "type": "integer",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "bio": {
            "type": "string"
          },
          "avatarUrl": {
            "type": "string"
          },
          "metaUrl": {
            "type": "string",
            "nullable": true
          },
          "profileUrl": {
            "type": "string",
            "nullable": true
          },
          "publicKey": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "nullable": true,
            "$ref": "#/components/schemas/UserRole"
          },
          "status": {
            "nullable": true,
            "$ref": "#/components/schemas/UserStatus"
          },
          "identities": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identity"
            }
          },
          "followersCount": {
            "type": "integer",
            "nullable": true
          },
          "followingCount": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": ["id", "name", "bio", "avatarUrl"]
      },
      "AccountType": {
        "type": "string",
        "enum": ["Account", "BonfidaDomain", "BonfidaTwitter", "Mint", "Program", "Token", "System"]
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "discoveredBy": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "identity": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Identity"
              }
            ]
          },
          "owner": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Account"
              }
            ]
          },
          "tokens": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          },
          "name": {
            "type": "string"
          },
          "program": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "network": {
            "$ref": "#/components/schemas/NetworkType"
          },
          "type": {
            "$ref": "#/components/schemas/AccountType"
          }
        },
        "required": [
          "id",
          "discoveredBy",
          "identity",
          "owner",
          "tokens",
          "name",
          "program",
          "address",
          "network",
          "type"
        ]
      },
      "RequestChallenge": {
        "type": "object",
        "properties": {
          "challenge": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["challenge", "expiresAt", "publicKey", "message"]
      },
      "ResponseChallengeOptions": {
        "type": "object",
        "properties": {
          "challenge": {
            "type": "string"
          },
          "publicKey": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          }
        },
        "required": ["challenge", "publicKey", "signature"]
      },
      "ConfigApi": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": ["name", "version", "url"]
      },
      "ConfigApp": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": ["description", "name", "url"]
      },
      "ClusterType": {
        "type": "string",
        "enum": ["Custom", "Devnet", "Mainnet", "Testnet"]
      },
      "Cluster": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ClusterType"
          },
          "endpoint": {
            "type": "string"
          },
          "explorerUrl": {
            "type": "string"
          }
        },
        "required": ["id", "name", "type", "endpoint", "explorerUrl"]
      },
      "Config": {
        "type": "object",
        "properties": {
          "api": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ConfigApi"
              }
            ]
          },
          "app": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ConfigApp"
              }
            ]
          },
          "cluster": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/Cluster"
              }
            ]
          },
          "clusters": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cluster"
            }
          },
          "user": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        },
        "required": ["api", "app", "cluster", "clusters", "user"]
      },
      "PageStatus": {
        "type": "string",
        "enum": ["Demo", "Draft", "Published"]
      },
      "PageType": {
        "type": "string",
        "enum": ["Degen", "Gaming", "Personal", "Professional"]
      },
      "PageBlockType": {
        "type": "string",
        "enum": ["Header", "Link"]
      },
      "PageBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "order": {
            "type": "number"
          },
          "data": {
            "type": "object",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/PageBlockType"
          }
        },
        "required": ["id", "name", "order", "type"]
      },
      "Page": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PageStatus"
          },
          "type": {
            "$ref": "#/components/schemas/PageType"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "viewUrl": {
            "type": "string",
            "nullable": true
          },
          "siteUrl": {
            "type": "string",
            "nullable": true
          },
          "urls": {
            "nullable": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "owner": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "blocks": {
            "nullable": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageBlock"
            }
          }
        },
        "required": ["status", "type"]
      },
      "IdentityProvider": {
        "type": "string",
        "enum": ["Discord", "Github", "Solana"]
      }
    }
  }
}
